services:
  backend:
    build: .
    ports:
      - "3004:3001"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=incident_admin
      - DB_PASSWORD=incident_password
      - DB_NAME=incident_grade
      - JWT_SECRET=incidencegrade
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - uploads_data:/app/uploads
    networks:
      - app-network
    restart: unless-stopped

  postgres:
    image: postgres:15
    ports:
      - "5437:5432"
    environment:
      - POSTGRES_USER=incident_admin
      - POSTGRES_PASSWORD=incident_password
      - POSTGRES_DB=incident_grade
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U incident_admin -d incident_grade"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data:
  uploads_data:

networks:
  app-network:
    driver: bridge
